version: 1
disable_existing_loggers: False # this allow to get logger at module level

root:
  handlers:
    - console
    - file-json
  level: DEBUG
  propagate: True

# Remove all handlers for werkzeug log entries - prevents duplicated logging
loggers:
  werkzeug:
    handlers: []
    level: WARNING
  gunicorn.error:
    level: DEBUG
    handlers:
      - console
      - file-json
  gunicorn.access:
    level: DEBUG
    handlers:
      - console
      - file-json

filters:
  isotime:
    (): logging_utilities.filters.TimeAttribute
    isotime: False
    utc_isotime: True
  flask:
    (): logging_utilities.filters.flask_attribute.FlaskRequestAttribute
    attributes:
      - path
      - method
      - headers
      - remote_addr
      - json
      - query_string
      - url
      - view_args
  const_attributes:
    (): logging_utilities.filters.ConstAttribute
    service_type: flask

formatters:
  standard:
    format: "[%(asctime)s] %(levelname)-8s - %(name)-26s : %(message)s"
  verbose:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(asctime)s] %(levelname)-8s - %(name)-26s : %(message)s"
    extra_fmt: " : path=%(flask_request_path)s headers=%(flask_request_headers)s payload=%(flask_request_json)s"
  json:
    (): logging_utilities.formatters.json_formatter.JsonFormatter
    add_always_extra: False
    filter_attributes:
      - utc_isotime
      - flask_request_path
      - flask_request_method
      - flask_request_query_string
      - flask_request_headers
      - flask_request_json
      - flask_request_remote_addr
      - flask_request_url
      - flask_request_view_args
      - service_type
    remove_empty: True
    ignore_missing: True
    fmt:
      # Custom fields
      ppbgdi:
        app:
          epsg: flask_request_view_args.srid
          api:
            version: flask_request_view_args.version
          layer:
            id: flask_request_view_args.layer_id
            time: flask_request_view_args.time
            column: flask_request_view_args.col
            row: flask_request_view_args.row
            zoom: flask_request_view_args.zoom

      # ECS fields
      message: message
      event:
        category: web
        created: utc_isotime
        duration: duration
        kind: event
        module: module
        severity: levelno
      http:
        request:
          body:
            content: "%(flask_request_json).128s"
          headers: flask_request_headers.
          method: "%(flask_request_method)s"
        response:
          body:
            content: "%(response.json).128s"
          headers: response.headers.
          status_code: response.status_code
      log:
        level: levelname
        logger: name
        origin:
          file:
            line: lineno
            name: module
          function: funcName
      url:
        original: flask_request_url
      process:
        pid: process
        thread:
          id: thread
      service:
        type: service_type
handlers:
  console:
    class: logging.StreamHandler
    formatter: standard
    stream: ext://sys.stdout
    filters:
      - isotime
      - flask
      - const_attributes
  file-json:
    level: DEBUG
    class: logging.FileHandler
    formatter: json
    filename: ${LOGS_DIR}/server-json-logs.json
    mode: w
    filters:
      - isotime
      - flask
